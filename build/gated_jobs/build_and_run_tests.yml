# This is the job template for building the binaries for one configuration. It does:
# - setup the machine
# - build binaries for desired configuration
# - upload binaries artifacts for the desired configuration

parameters:
  - name: BUILD_SUFFIX
    type: string
  - name: GBALLOC_LL_TYPE
    type: string
  - name: FSANITIZE_TYPE
    type: string
  - name: build_configuration
    default: "Debug"
  - name: ARCH_TYPE
    default: "x64"

jobs:
- job: build_and_run_tests_${{ parameters.BUILD_SUFFIX }}
  displayName: 'Build and run tests, build_configuration: ${{ parameters.build_configuration }}, ${{ parameters.GBALLOC_LL_TYPE}}, ARCH_TYPE=${{ parameters.ARCH_TYPE }}, FSANITIZE_TYPE: ${{ parameters.FSANITIZE_TYPE}}'

  variables:
    ${{ if eq(parameters.FSANITIZE_TYPE, 'ON') }}:
      use_vld_option: '-Duse_vld:bool=OFF'
    ${{ if eq(parameters.FSANITIZE_TYPE, 'OFF') }}:
      use_vld_option: '-Duse_vld:bool=ON'

  pool:
    name: Azure-MessagingStore-WinBuildPoolVS2022
    demands:
    - Cmd
    - msbuild
    - cmake
    - visualstudio

  workspace:
    clean: all

  steps:
  - checkout: self
    submodules: true
    clean: false
    persistCredentials: true

  - task: BatchScript@1
    displayName: 'Git submodule update'
    inputs:
      filename: 'C:\Program Files\Git\bin\git.exe'
      arguments: 'submodule update --init --force'

  - task: BatchScript@1
    displayName: 'Git submodule clean'
    inputs:
      filename: 'C:\Program Files\Git\bin\git.exe'
      arguments: 'submodule foreach --recursive "git clean -xdff"'

  - task: BatchScript@1
    displayName: 'Git clean'
    inputs:
      filename: 'C:\Program Files\Git\bin\git.exe'
      arguments: 'clean -xdff'

  - task: BatchScript@1
    displayName: 'Setup VS Vars'
    inputs:
      filename: '"c:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat"'
      modifyEnvironment: true

  - task: CMake@1
    displayName: 'CMake .. -Drun_reals_check:bool=ON -Drun_unittests:bool=ON -Drun_int_tests:bool=ON -Duse_cppunittest:bool=ON ${{ variables.use_vld_option }} -G "Visual Studio 17 2022" -A ${{ parameters.ARCH_TYPE }}'
    inputs:
      workingDirectory: 'build_x64'
      cmakeArgs: '.. -Drun_reals_check:bool=ON -Drun_unittests:bool=ON -Drun_int_tests:bool=ON -Duse_cppunittest:bool=ON ${{ variables.use_vld_option }} -G "Visual Studio 17 2022" -A ${{ parameters.ARCH_TYPE }}'

  - task: VSBuild@1
    displayName: 'Build solution build_x64\*.sln'
    inputs:
      solution: 'build_x64\*.sln'
      msbuildArgs: '/t:restore /t:build'
      configuration: ${{ parameters.build_configuration }}
      maximumCpuCount: true

  - task: VSTest@2
    displayName: 'VsTest - testAssemblies'
    inputs:
      testAssemblyVer2: |
          **\*_ut_*.dll
          **\*_int_*.dll
          **\*_perf_*.dll
      runTestsInIsolation: true

  - task: CmdLine@1
    displayName: 'Run ctest'
    inputs:
      filename: ctest
      arguments: '-C "${{ parameters.build_configuration }}" -V --output-on-failure'
      workingFolder: 'build_x64'

  - template: ../templates/dump_drive_usage.yml
  